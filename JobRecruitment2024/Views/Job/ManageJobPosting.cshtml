@model JobRecruitment2024.Models.JobViewModel

@{
    ViewBag.Title = "Manage Job Posting";
    Layout = "~/Views/Shared/_LayoutList.cshtml";
}


@if (Model != null && Model.JobsList != null)
{
    if (TempData["SuccessMessage"] != null)
    {
        ViewBag.SuccessMessage = TempData["SuccessMessage"];
    }
    <div class="row">
        <div class="col-lg-12">
            <div class="p-5">
                <div class="text-center">
                    <h4 class="h4 text-gray-900 mb-4">@ViewBag.Title</h4>
                </div>

                <button id="createButton" class="btn btn-primary btn-user btn-block">Create</button>
                <br />

                @if (ViewBag.SuccessMessage != null)
                {
                    <div class="alert alert-success" role="alert">
                        @ViewBag.SuccessMessage
                    </div>
                }
                
                <div id="Create" style="display:none">
                    <form method="post">
                        @Html.LabelFor(model => model.job_name, "Job Name:")
                        @Html.TextBoxFor(model => model.job_name, new { @class = "form-control form-control-user", maxlength = 50, required = "required" })

                        @Html.LabelFor(model => model.job_description, "Job Descrition:")
                        @Html.TextBoxFor(model => model.job_description, new { @class = "form-control form-control-user", maxlength = 200, required = "required" })
                        
                        @Html.LabelFor(model => model.salary, "Salary:")
                        @Html.TextBoxFor(model => model.salary, new { @type = "number",@class = "form-control form-control-user", @Value = "", required = "required" })
                        
                        @Html.LabelFor(model => model.employee_limit, "Employee Limit:")
                        @Html.TextBoxFor(model => model.employee_limit, new { @type = "number", @class = "form-control form-control-user", @Value = "", required = "required" })
                        <br />
                        <input type="submit" class="btn btn-success btn-user btn-block" value="Create Job" />
                    </form>
                </div>

                <div id="Update">

                    @if (Model.JobsList.Any())
                    {
                        <div class="mt-4">
                            <div class="d-flex justify-content-center">
                                <div class="table-responsive">
                                    <table class="table">
                                        <thead class="thead-light">
                                            <tr>
                                                <th>Name</th>
                                                <th>Description</th>
                                                <th>Salary</th>
                                                <th>E.L.</th>
                                                <th>Actions</th>
                                            </tr>
                                        </thead>
                                        <tbody>
                                            @foreach (var job in Model.JobsList)
                                            {
                                                int quota = @job.employee_limit - @job.vacancy;
                                                <tr>
                                                    <td>@job.job_name</td>
                                                    <td>@job.job_description</td>
                                                    <td>@job.salary</td>
                                                    <td>@quota/@job.employee_limit </td>
                                                    <td>
                                                        <button type="button" class="btn btn-warning btn-user btn-block updateButton" data-jobid="@job.job_id">Edit</button>
                                                    </td>
                                                </tr>


                                                <tr id="updateForm_@job.job_id" style="display:none">
                                                    @using (Html.BeginForm("JobUpdate", "Job", FormMethod.Post, new { @class = "user" }))
                                                    {
                                                        @Html.HiddenFor(model => job.job_id, new { Name = "job_id" })
                                                        @Html.HiddenFor(model => job.dep_id, new { Name = "dep_id" })
                                                        @Html.HiddenFor(model => job.vacancy, new { Name = "vacancy" })
                                                        <td>

                                                            @Html.TextBoxFor(model => model.job_name, new { @class = "form-control form-control-user", maxlength = 50, @Value = job.job_name, required = "required" })
                                                        </td>
                                                        <td>
                                                            @Html.TextBoxFor(model => model.job_description, new { @class = "form-control form-control-user", maxlength = 200, @Value = job.job_description, required = "required" })
                                                        </td>
                                                        <td>
                                                            @Html.TextBoxFor(model => model.salary, new { @class = "form-control form-control-user", @Value = job.salary, required = "required" })
                                                        </td>
                                                        <td>
                                                            @Html.TextBoxFor(model => model.employee_limit, new { @class = "form-control form-control-user", @Value = job.employee_limit, required = "required" })
                                                            <button type="submit" class="btn btn-primary btn-user btn-block">Update</button>
                                                        </td>

                                                    }
                                                    @using (Html.BeginForm("JobDelete", "Job", FormMethod.Post, new { @class = "user" }))
                                                    {
                                                        <td>
                                                            @Html.HiddenFor(model => job.job_id, new { Name = "job_id" })
                                                            <button type="submit" class="btn btn-danger btn-user btn-block">Delete</button>
                                                        </td>
                                                    }
                                                </tr>

                                            }
                                        </tbody>
                                    </table>
                                </div>
                            </div>
                        </div>

                        <div class="text-center">
                            <a class="small" href="@Url.Action("ManagerMainPage", "Manager")">Manager Main Page</a>
                        </div>

                    }
                    else
                    {
                        <div id="errorMessage" style="color: red;">No Jobs Found.</div>
                    }
                </div>
            </div>
        </div>
    </div>
}
else
{ <div class="alert alert-danger" role="alert">
        @ViewBag.ErrorMessage
    </div>

    <script>
    setTimeout(function () {
        window.location.href = '@Url.Action("ManagerLoginPage","Manager")';
    }, 3000);
    </script>

}

<script>
    document.getElementById('createButton').addEventListener('click', function () {
        var createDiv = document.getElementById('Create');
        if (createDiv.style.display === 'none') {
            createDiv.style.display = 'block';
            document.getElementById("errorMessage").style.display = "block";
        }
        else {
            createDiv.style.display = 'none';
            document.getElementById("errorMessage").style.display = "none";
        }
    });

    var updateButtons = document.getElementsByClassName('updateButton');
    for (var i = 0; i < updateButtons.length; i++) {
        updateButtons[i].addEventListener('click', function () {
            var jobId = this.getAttribute('data-jobid');
            var updateForm = document.getElementById('updateForm_' + jobId);

            if (updateForm.style.display === 'none') {
                updateForm.style.display = 'table-row';
            } else {
                updateForm.style.display = 'none';
            }
        });
    }
</script>