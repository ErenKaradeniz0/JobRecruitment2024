@model JobRecruitment2024.Models.Managers
@{
    ViewBag.Title = "Manager Update Account";
}

<h2>@ViewBag.Title</h2>

<div id="errorMessage" style="display: none; color: red;">Passwords do not match!</div>

@if (Model != null)
{
    if (ViewBag.SuccessMessage != null)
    {
        <p>@ViewBag.SuccessMessage</p>
        <script>
        setTimeout(function () {
            window.location.href = '@Url.Action("ManagerMainPage")';
        }, 3000);
        </script>
    }
    else if (ViewBag.ErrorMessage != null)
    {
        <p>@ViewBag.ErrorMessage </p>
    }
    using (Html.BeginForm("ManagerUpdateAccount", "Manager", FormMethod.Post, new { id = "updateForm" }))
    {
        @Html.LabelFor(model => model.username, "Username:")
        @Html.TextBoxFor(model => model.username, new {maxlength = 15, required = "required" })
        @Html.Raw("<br><br>")

        @Html.LabelFor(model => model.name, "Name:")
        @Html.TextBoxFor(model => model.name, new { maxlength = 15, required = "required" })
        @Html.Raw("<br><br>")

        @Html.LabelFor(model => model.surname, "Surname:")
        @Html.TextBoxFor(model => model.surname, new { maxlength = 15, required = "required" })
        @Html.Raw("<br><br>")

        @Html.LabelFor(model => model.email, "Email:")
        @Html.TextBoxFor(model => model.email, new { maxlength = 50, type = "email" })
        @Html.Raw("<br><br>")

        @Html.CheckBox("changePassword", new { id = "changePasswordCheckbox" })
        @Html.Label("changePassword", "Change Password")
        @Html.Raw("<br><br>")

        <div id="passwordField" style="display: none;">
            @Html.LabelFor(model => model.password, "New Password:")
            @Html.PasswordFor(model => model.password, new { maxlength = 10, id = "newPassword" })
            @Html.Raw("<br><br>")

            @Html.Label("newPasswordAgain", "New Password Again:")
            @Html.Password("newPasswordAgain", null, new { maxlength = 10})
            @Html.Raw("<br><br>")
        </div>

        @Html.LabelFor(model => model.phone_num, "Phone:")
        @Html.TextBoxFor(model => model.phone_num, new { maxlength = 11, required = "required" })
        @Html.Raw("<br><br>")

        <button type="submit">Update Account</button>
    }
}
else
{<p>@ViewBag.ErrorMessage</p>
<script>
        setTimeout(function () {
            window.location.href = '@Url.Action("ManagerLoginPage")';
        }, 3000); 
</script>
}

<a href="ManagerMainPage">Manager Main Page</a>

<script>
    var newPasswordInput = document.getElementById('newPassword');
    var newPasswordAgainInput = document.getElementById('newPasswordAgain');
    var errorMessage = document.getElementById('errorMessage');

    document.getElementById('changePasswordCheckbox').addEventListener('change', function () {
        var passwordField = document.getElementById('passwordField');

        if (this.checked) {
            passwordField.style.display = 'block';
            // Make password fields required
            newPasswordInput.setAttribute('required', 'required');
            newPasswordAgainInput.setAttribute('required', 'required');

        } else {
            passwordField.style.display = 'none';
            errorMessage.style.display = 'none';
            // Remove required attribute when checkbox is unchecked
            newPasswordInput.removeAttribute('required');
            newPasswordAgainInput.removeAttribute('required');
        }
    });

    document.getElementById('updateForm').addEventListener('submit', function (event) {

        if (newPasswordInput.value !== newPasswordAgainInput.value) {
            // Display error message and prevent form submission
            errorMessage.textContent = 'Passwords do not match';
            errorMessage.style.display = 'block';
            event.preventDefault(); // Prevent default action
        } else {
            errorMessage.style.display = 'none';
        }
    });
</script>
